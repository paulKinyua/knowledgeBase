DOCKER
-----------------------------------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=nUs6k2h1Z2w&list=PLQH1-k79HB396mS8xRQ5gih5iqkQw-4aV&index=4&ab_channel=GaryClarke
-----------------------------------------------------------------------------------------------------------------

#When using docker to containerise your project, you 
#will have to make 2 files:

# first file is a yaml file. It will be located at the root
# directory. This file will contain the specifications for the 
# container. Below is a sample of a yaml file

	services:
	  #nginx
	
	  web:
	    image: nginx:latest
	    ports:
	      - "80:80"

	  app:
	    build:
	      dockerfile: ./php/Dockerfile
	  
#once done with the yaml file, run docker compose up on the terminal. When everything is done running, go to your browser and check
# localhost:80. It should return nginx. By running docker ps on command prompt, you will see the details of the running container
# docker compose ps will show you which services are running. If you would like to run compose up and still continue using terminal, 
#run docker compose up -d 

# The next file is a Dockerfile 
# this file is responsible for holding the project. 
# below is  a sample of a docker file.

	FROM php
	WORKDIR /app
	COPY ./.htaccess index.php app ./
	EXPOSE 3000
	CMD [ "php", "-S", "0.0.0.0:3000"] 

#to build a docker file you'll run the command below on CMD
docker build -t paulk:php -f php/Dockefile .
# -t allows us to assign a name to the container(paulK:php)
# -f allows us to specify the location of the Dockerfile
# once the docker file has been successfully built, you will find it located in the docker app.

docker compose ps - show the containers that are running

########
NGINX CONFIGURATION
########

------------------------------------------------------------------------------------------------------------------------------
 Step 1:
Create a docker file

 Step 2:
Build the docker file, run;
	"docker build -t image_name ."

 Step 3:
Run the application:
	"docker run -d -p 5002:5002 face_matching"

---	----	----	----
check running containers:
	docker ps

dislay all images:
	docker images

view container logs:
	docker logs -f container_id

Remove unused resources, free up space and keep the system clean
docker container prune